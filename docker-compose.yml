################################################################################
#                                                                              #
# Metadata:                                                                    #
#                                                                              #
# 	File: docker-compose.yml                                                   #
# 	Author: Jess Mann                                                          #
# 	Email: jess@urbanlens.org                                                  #
#                                                                              #
# 	-----                                                                      #
#                                                                              #
# 	Copyright (c) 2023 Urban Lens                                              #
################################################################################
services:
  app:
    container_name: urbanlens_app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GIT_EMAIL=${GIT_EMAIL}
        - GIT_NAME=${GIT_NAME}
        - GH_TOKEN=${GH_TOKEN}
        - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
        - ENVIRONMENT=${ENVIRONMENT:-production}
        - UL_DATABASE_USER=${UL_DATABASE_USER:-postgres}
        - UL_DATABASE_NAME=${UL_DATABASE_NAME:-postgres}
        - UL_DATABASE_PASS=${UL_DATABASE_PASS:-postgres}
        - UL_DATABASE_HOST=${UL_DATABASE_HOST:-urbanlens_db}
        - UL_DATABASE_PORT=${UL_DATABASE_PORT:-5432}

    restart: on-failure

    depends_on:
      db:
        condition: service_healthy

    volumes:
      - logs:/var/log
      - static_volume:/app/frontend/static
    
    ports:
      - "${APP_PORT:-21800}:8000"

    networks:
      app_network:
        aliases:
          - urbanlens_app

    environment:
      - GIT_EMAIL=${GIT_EMAIL}
      - GIT_NAME=${GIT_NAME}
      - GH_TOKEN=${GH_TOKEN}
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
      - UL_DATABASE_USER=${UL_DATABASE_USER:-postgres}
      - UL_DATABASE_NAME=${UL_DATABASE_NAME:-postgres}
      - UL_DATABASE_PASS=${UL_DATABASE_PASS:-postgres}
      - UL_DATABASE_HOST=${UL_DATABASE_HOST:-urbanlens_db}
      - UL_DATABASE_PORT=${UL_DATABASE_PORT:-5432}
      - ENVIRONMENT=${ENVIRONMENT:-production}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  nginx:
    container_name: urbanlens_nginx
    image: nginx:alpine
    volumes:
      - static_volume:/app/frontend/static
      - ./config/nginx:/etc/nginx/conf.d
    ports:
      - "${NGINX_PORT:-21080}:80"
    depends_on:
      - app
    networks:
      app_network:
        aliases:
          - urbanlens_nginx

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  db:
    container_name: urbanlens_db
    image: postgis/postgis:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      app_network:
        aliases:
          - urbanlens_db

    environment:
      - POSTGRES_USER=${UL_DATABASE_USER:-postgres}
      - POSTGRES_DB=${UL_DATABASE_NAME:-postgres}
      - POSTGRES_PASSWORD=${UL_DATABASE_PASS:-postgres}
      - POSTGRES_PORT=${UL_DATABASE_PORT:-5432}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${UL_DATABASE_USER}"]
      interval: 10s
      timeout: 10s
      retries: 9

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  postgres-data:
  logs:
  static_volume: 

networks:
  app_network:
    driver: bridge
